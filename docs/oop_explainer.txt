OOP CONCEPTS IMPLEMENTED
========================

1. MULTIPLE INHERITANCE
   - TextClassifier inherits from: LogMixin + ConfigMixin + BaseAIModel
   - ImageClassifier inherits from: LogMixin + ConfigMixin + BaseAIModel
   - Combines logging, configuration, and AI model functionality

2. DECORATOR STACKING
   - process() method uses multiple decorators:
   - @timeit (performance monitoring)
   - @log_call (method call logging)
   - @ensure_input (input validation)

3. ENCAPSULATION
   - Private attributes: _pipeline, _model_id, _task_name
   - Public interface via properties: model_id property
   - Internal state hidden from external access

4. POLYMORPHISM + METHOD OVERRIDING
   - BaseAIModel defines abstract process() method
   - TextClassifier.process() - handles text classification
   - ImageClassifier.process() - handles image classification
   - Shared load() method inherited from BaseAIModel

5. SEPARATION OF CONCERNS
   - Models package: AI logic isolated
   - GUI package: Interface code separated
   - Utils package: Reusable components (decorators, mixins)
   - Each module has single responsibility
